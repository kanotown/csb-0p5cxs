{"version":3,"sources":["App.jsx","index.js"],"names":["App","useState","todoText","setTodoText","incompleteTodos","setIncompleteTodos","completeTodos","className","placeholder","value","onChange","e","target","onClick","newTodos","map","todo","type","createRoot","document","getElementById","render"],"mappings":"sKA0DeA,EAxDH,WACV,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8CF,mBAAS,CAAC,SAAU,OAAlE,mBAAOG,EAAP,KAAwBC,EAAxB,KACA,EAA0CJ,mBAAS,CAAC,uBAApD,mBAAOK,EAAP,UAYA,OACE,qCACE,sBAAKC,UAAU,aAAf,UACE,uBACEC,YAAY,OACZC,MAAOP,EACPQ,SAhBiB,SAACC,GACxBR,EAAYQ,EAAEC,OAAOH,MACtB,IAgBK,wBAAQI,QAdK,WACjB,IAAMC,EAAQ,sBAAOV,GAAP,CAAwBF,IACtCG,EAAmBS,GACnBX,EAAY,GACb,EAUK,6BAEF,sBAAKI,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAb,0CACA,6BACGH,EAAgBW,KAAI,SAACC,GACpB,OACE,sBAAgBT,UAAU,WAA1B,UACE,6BAAKS,IACL,uBAAOC,KAAK,SAASR,MAAM,iBAC3B,uBAAOQ,KAAK,SAASR,MAAM,mBAHnBO,EAMb,SAGL,sBAAKT,UAAU,gBAAf,UACE,mBAAGA,UAAU,QAAb,oCACA,6BACGD,EAAcS,KAAI,SAACC,GAClB,OACE,sBAAgBT,UAAU,WAA1B,UACE,6BAAKS,IACL,uBAAOC,KAAK,SAASR,MAAM,mBAFnBO,EAKb,WAKV,ECnDDE,qBAAWC,SAASC,eAAe,SAASC,OAC1C,cAAC,aAAD,UACE,cAAC,EAAD,M","file":"static/js/main.3a47dfe0.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nconst App = () => {\n  const [todoText, setTodoText] = useState(\"\");\n  const [incompleteTodos, setIncompleteTodos] = useState([\"aaaaaz\", \"ii\"]);\n  const [completeTodos, setCompleteTodos] = useState([\"えええ\"]);\n\n  const onChangeTodoText = (e) => {\n    setTodoText(e.target.value);\n  };\n\n  const onClickAdd = () => {\n    const newTodos = [...incompleteTodos, todoText];\n    setIncompleteTodos(newTodos);\n    setTodoText(\"\");\n  };\n\n  return (\n    <>\n      <div className=\"input-area\">\n        <input\n          placeholder=\"TODO\"\n          value={todoText}\n          onChange={onChangeTodoText}\n        />\n        <button onClick={onClickAdd}>追加</button>\n      </div>\n      <div className=\"incomplete-area\">\n        <p className=\"title\">未完了のTODO</p>\n        <ul>\n          {incompleteTodos.map((todo) => {\n            return (\n              <div key={todo} className=\"list-row\">\n                <li>{todo}</li>\n                <input type=\"button\" value=\"完了\" />\n                <input type=\"button\" value=\"削除\" />\n              </div>\n            );\n          })}\n        </ul>\n      </div>\n      <div className=\"complete-area\">\n        <p className=\"title\">完了のTODO</p>\n        <ul>\n          {completeTodos.map((todo) => {\n            return (\n              <div key={todo} className=\"list-row\">\n                <li>{todo}</li>\n                <input type=\"button\" value=\"戻す\" />\n              </div>\n            );\n          })}\n        </ul>\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","import React, { StrictMode } from \"react\";\nimport \"./style.css\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\n\ncreateRoot(document.getElementById(\"root\")).render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n\n// ReactDom.render(<App />, document.getElementById(\"root\"));\n\n// import { StrictMode } from \"react\";\n// import { createRoot } from \"react-dom/client\";\n\n// import App from \"./App\";\n\n// const rootElement = document.getElementById(\"root\");\n// const root = createRoot(rootElement);\n\n// root.render(\n//   <StrictMode>\n//     <App />\n//   </StrictMode>\n// );\n"],"sourceRoot":""}